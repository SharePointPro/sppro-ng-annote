{"version":3,"sources":["../../../projects/sppro-ng-annote/src/lib/enums/drawableEnum.ts","../../../projects/sppro-ng-annote/src/lib/factories/shapeFactory.ts","../../../projects/sppro-ng-annote/src/lib/factories/textareaFactory.ts","../../../projects/sppro-ng-annote/src/lib/ng-annote/ng-annote.component.ts","../../../projects/sppro-ng-annote/src/lib/toolbar/toolbar.component.ts","../../../projects/sppro-ng-annote/src/lib/sppro-ng-annote.module.ts"],"names":["DrawableEnum","shapeFactory","x","y","color","Konva","Line","stroke","strokeWidth","points","draggable","Rect","width","height","Circle","radius","Arrow","fontFamily","text","Text","fontStyle","TEXT_AREA_ID","textareaFactory","onBlur","textarea","getTextArea","styleTextarea","setupEvents","setTimeout","focus","document","getElementById","createElement","getElementsByClassName","appendChild","style","position","id","top","left","fontSize","border","padding","margin","overflow","whiteSpace","background","outline","resize","lineHeight","transformOrigin","addEventListener","e","autoExpand","target","removeTextarea","elem","parentNode","removeChild","field","scrollHeight","scrollWidth","DEFAULT_DRAWABLE_TYPE","FreePathDrawable","DEFAULT_FONT_FAMILY","NgAnnoteComponent","this","onSave","EventEmitter","_drawableType","isPaint","mode","textAreaVisible","Object","defineProperty","prototype","value","ngOnInit","_this","img","Image","onload","image","initalizeStage","layer","Layer","add","stage","src","Stage","container","on","onMouseDown","onMouseUp","onMouseMove","pos","getPointerPosition","drawableType","lastShape","SquareDrawable","CircleDrawable","ArrowDrawable","TextDrawable","element","batchDraw","onSaveClick","emit","toDataURL","onClear","children","length","onUndo","splice","newPoints","concat","dx","attrs","dy","Math","sqrt","push","Component","args","selector","template","Output","ToolbarComponent","drawableTypeChange","colorChange","showColorPicker","faPencilAlt","faSquare","faCircle","faLongArrowAltRight","faFont","faSquareFull","faUndo","faBan","faSave","onDrawableChange","getClass","classes","showColor","onColorChange","event","hex","onAccept","onColorPicked","Input","NgModule","declarations","imports","FontAwesomeModule","ColorPhotoshopModule","CommonModule","exports"],"mappings":"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","sourcesContent":["export enum DrawableEnum {\r\n    FreePathDrawable,\r\n    SquareDrawable,\r\n    CircleDrawable,\r\n    ArrowDrawable,\r\n    TextDrawable\r\n  }","import { normalizeGenFileSuffix } from '@angular/compiler/src/aot/util';\r\nimport Konva from 'konva';\r\n\r\nconst TEXT_AREA_ID = \"konva-text-editor\";\r\n\r\nexport default {\r\n    CreateLine(x: number, y: number, color: string): Konva.Line {\r\n        return new Konva.Line({\r\n            stroke: color,\r\n            strokeWidth: 2,\r\n            // globalCompositeOperation:\r\n            //   this.mode === 'brush' ? 'source-over' : 'destination-out',\r\n            points: [x, y],\r\n            draggable: true\r\n        });\r\n    },\r\n    CreateRectange(x: number, y: number, color: string): Konva.Rect {\r\n        return new Konva.Rect({\r\n            stroke: color,\r\n            strokeWidth: 2,\r\n            x: x,\r\n            y: y,\r\n            width: 0,\r\n            height: 0,\r\n            draggable: true\r\n        });\r\n    },\r\n    CreateCircle(x: number, y: number, color: string): Konva.Circle {\r\n        return new Konva.Circle({\r\n            stroke: color,\r\n            strokeWidth: 2,\r\n            x: x,\r\n            y: y,\r\n            radius: 0,\r\n            draggable: true\r\n        });\r\n    },\r\n    CreateArrow(x: number, y: number, color: string): Konva.Arrow {\r\n        return new Konva.Arrow({\r\n            stroke: color,\r\n            strokeWidth: 2,\r\n            points: [x, y],\r\n            draggable: true\r\n        });\r\n    },\r\n    CreateText(x: number, y: number, color: string, fontFamily: string, text: string): Konva.Text {\r\n        return new Konva.Text({\r\n            stroke: color,\r\n            strokeWidth: .1,\r\n            x: x,\r\n            y: y + 1,\r\n            text: text,\r\n            draggable: true,\r\n            fontFamily: fontFamily,\r\n            fontStyle: 'normal'\r\n        });\r\n    }\r\n\r\n}\r\n","const TEXT_AREA_ID = \"konva-text-editor\";\r\n\r\nexport default {\r\n    createTextArea: (x: number, y: number, color: string, fontFamily: string, onBlur: Function) => {\r\n        let textarea = getTextArea();\r\n        styleTextarea(textarea, x, y, color, fontFamily);\r\n        setupEvents(textarea, onBlur);\r\n\r\n        //Auto focus after creation\r\n        setTimeout(() => {\r\n            textarea.focus();\r\n        }, (100));\r\n    }\r\n}\r\n\r\nconst getTextArea = () => {\r\n    var textarea = document.getElementById(TEXT_AREA_ID);\r\n    if (!textarea) {\r\n        textarea = document.createElement('textarea');\r\n        let canvas = document.getElementsByClassName(\"konvajs-content\")[0];\r\n        canvas.appendChild(textarea);\r\n\r\n        textarea.style.position = 'absolute';\r\n        textarea.id = TEXT_AREA_ID;\r\n    }\r\n    return textarea;\r\n}\r\n\r\nconst styleTextarea = (textarea, x, y, color, fontFamily) => {\r\n    textarea.style.top = y + 'px';\r\n    textarea.style.left = x + 'px';\r\n    textarea.style.width = \"20px\";\r\n    textarea.style.height = \"20px\"\r\n    textarea.style.fontSize = '12px';\r\n    textarea.style.border = 'none';\r\n    textarea.style.padding = '0px';\r\n    textarea.style.margin = '0px';\r\n    textarea.style.overflow = 'hidden';\r\n    textarea.style.whiteSpace = 'nowrap';\r\n    textarea.style.background = 'none';\r\n    textarea.style.outline = 'none';\r\n    textarea.style.resize = 'none';\r\n    textarea.style.lineHeight = \"12px\"\r\n    textarea.style.transformOrigin = 'left top';\r\n    textarea.style.color = color;\r\n    textarea.style.fontFamily = fontFamily;\r\n}\r\n\r\nconst setupEvents = (textarea, onBlur) => {\r\n \r\n    textarea.addEventListener('input', (e) => {\r\n        autoExpand(e.target);\r\n    });\r\n\r\n    textarea.addEventListener('blur', (e) => {\r\n        removeTextarea();\r\n        onBlur(e);\r\n    });\r\n}\r\n\r\nconst removeTextarea = () => {\r\n    var elem = document.getElementById(TEXT_AREA_ID);\r\n    if (elem != null) {\r\n        elem.parentNode.removeChild(elem);\r\n    }\r\n}\r\n\r\nconst autoExpand = (field) => {\r\n    // Calculate the height\r\n    var height = field.scrollHeight;\r\n    var width = field.scrollWidth;\r\n    field.style.width = width + 'px';\r\n    field.style.height = height + 'px';\r\n}","import { createOfflineCompileUrlResolver } from '@angular/compiler';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport Konva from 'konva';\nimport { DrawableEnum } from  '../enums/drawableEnum';\nimport shapeFactory from '../factories/shapeFactory';\nimport textareaFactory from '../factories/textareaFactory';\n\nconst DEFAULT_DRAWABLE_TYPE: DrawableEnum = DrawableEnum.FreePathDrawable;\nconst DEFAULT_FONT_FAMILY: string = 'Arial';\n\n@Component({\n  selector: 'sppro-ng-annote',\n  templateUrl: './ng-annote.component.html',\n  styleUrls: ['./ng-annote.component.scss']\n})\nexport class NgAnnoteComponent implements OnInit {\n\n  @Output() onSave = new EventEmitter<string>();\n\n  private _drawableType: DrawableEnum = DEFAULT_DRAWABLE_TYPE;\n\n  stage: Konva.Stage;\n  layer: Konva.Layer;\n  image: Konva.Image;\n  isPaint: boolean = false;\n  mode: string = 'brush';\n  lastShape: any;\n  color: string = '#000000';\n  textAreaVisible: boolean = false;\n\n\n  img: HTMLImageElement;\n\n  constructor() {\n\n  }\n\n\n  get drawableType(): DrawableEnum {\n    return this._drawableType;\n  }\n\n  set drawableType(value: DrawableEnum) {\n    this._drawableType = value;\n  }\n\n  ngOnInit(): void {\n    this.img = new Image();\n\n    this.img.onload = () => {\n\n      this.image = new Konva.Image({\n        image: this.img,\n      });\n\n      this.initalizeStage();\n\n      this.layer = new Konva.Layer({\n      });\n      this.layer.add(this.image);\n      this.stage.add(this.layer);\n\n    };\n\n    this.img.src = \"https://sharepointpro.github.io/sppro-image-annote/static/media/room.fdc5a868.jpg\";\n  }\n\n\n  initalizeStage(): void {\n    this.stage = new Konva.Stage({\n      container: \"stage\",\n      width: this.img.width,\n      height: this.img.height\n    });\n\n    this.stage.on('mousedown', (e) => { this.onMouseDown(e) });\n    this.stage.on('mouseup', (e) => { this.onMouseUp(e) });\n    this.stage.on('mousemove', (e) => { this.onMouseMove(e) });\n  }\n\n  onMouseDown(e): void {\n    this.isPaint = true;\n\n    var pos = this.stage.getPointerPosition();\n\n    if (this.drawableType === DrawableEnum.FreePathDrawable) {\n      this.lastShape = shapeFactory.CreateLine(pos.x, pos.y, this.color);\n      this.layer.add(this.lastShape);\n    }\n\n    if (this.drawableType === DrawableEnum.SquareDrawable) {\n      this.lastShape = shapeFactory.CreateRectange(pos.x, pos.y, this.color);\n      this.layer.add(this.lastShape);\n    }\n\n    if (this.drawableType === DrawableEnum.CircleDrawable) {\n      this.lastShape = shapeFactory.CreateCircle(pos.x, pos.y, this.color);\n      this.layer.add(this.lastShape);\n    }\n\n    if (this.drawableType === DrawableEnum.ArrowDrawable) {\n      this.lastShape = shapeFactory.CreateArrow(pos.x, pos.y, this.color);\n      this.layer.add(this.lastShape);\n    }\n\n    if (this.drawableType === DrawableEnum.TextDrawable) {\n\n      if (!this.textAreaVisible) {\n        this.textAreaVisible = true;\n\n        textareaFactory.createTextArea(pos.x, pos.y, this.color, DEFAULT_FONT_FAMILY, (element) => {\n          if (element.target.value !== \"\") {\n            this.lastShape = shapeFactory.CreateText(pos.x, pos.y, this.color, DEFAULT_FONT_FAMILY, element.target.value);\n            this.layer.add(this.lastShape);\n            this.layer.batchDraw();\n            this.textAreaVisible = false;\n\n          }\n        })\n      }\n\n    }\n\n  }\n\n  onSaveClick(): void {\n    this.onSave.emit(this.stage.toDataURL());\n  }\n\n  onClear(): void {\n    while (this.layer.children.length > 1){\n      this.onUndo();\n    }\n    this.layer.batchDraw();\n  }\n\n  onMouseUp(e): void {\n    this.isPaint = false;\n    this.lastShape = null;\n  }\n\n  onUndo(): void {\n    if (this.layer.children.length > 1) {\n      this.layer.children.splice(-1, 1);\n      this.layer.batchDraw();\n    }\n  }\n\n  onMouseMove(e): void {\n    if (!this.isPaint || !this.lastShape || this.lastShape === DrawableEnum.TextDrawable) {\n      return;\n    }\n    const pos = this.stage.getPointerPosition();\n\n    if (this.drawableType === DrawableEnum.FreePathDrawable) {\n      let newPoints = this.lastShape.points().concat([pos.x, pos.y]);\n      this.lastShape.points(newPoints);\n    }\n\n    if (this.drawableType === DrawableEnum.SquareDrawable) {\n      const dx = -(this.lastShape.attrs.x - pos.x);\n      const dy = -(this.lastShape.attrs.y - pos.y);\n\n      this.lastShape.attrs.width = dx;\n      this.lastShape.attrs.height = dy;\n    }\n\n    if (this.drawableType === DrawableEnum.CircleDrawable) {\n      const dx = this.lastShape.attrs.x - pos.x;\n      const dy = this.lastShape.attrs.y - pos.y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      this.lastShape.attrs.radius = radius;\n    }\n\n    if (this.drawableType === DrawableEnum.ArrowDrawable) {\n      let newPoints = [this.lastShape.attrs.points[0], this.lastShape.attrs.points[1]];\n\n      newPoints.push(pos.x);\n      newPoints.push(pos.y);\n\n      this.lastShape.points(newPoints);\n    }\n\n    this.layer.batchDraw();\n  }\n\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { faSave, faBan, faUndo, faSquareFull, faPencilAlt, faSquare, faCircle, faLongArrowAltRight, faFont  } from '@fortawesome/free-solid-svg-icons'\nimport { DrawableEnum } from '../enums/drawableEnum';\n\n@Component({\n  selector: 'sppro-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent implements OnInit {\n\n  @Output() drawableTypeChange = new EventEmitter<DrawableEnum>();\n  @Input() drawableType:DrawableEnum;\n\n  @Output() colorChange = new EventEmitter<string>();\n  @Input() color:string;\n\n  @Output() onUndo = new EventEmitter();\n  @Output() onClear = new EventEmitter();\n  @Output() onSave = new EventEmitter();\n\n\n\n\n  showColorPicker: boolean = false;\n\n  //Icons\n  faPencilAlt = faPencilAlt;\n  faSquare = faSquare;\n  faCircle = faCircle;\n  faLongArrowAltRight = faLongArrowAltRight;\n  faFont = faFont;\n  faSquareFull = faSquareFull;\n  faUndo = faUndo;\n  faBan = faBan;\n  faSave = faSave;\n\n  DrawableEnum = DrawableEnum;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDrawableChange(value:DrawableEnum): void {\n    this.drawableTypeChange.emit(value);\n  }\n\n  getClass(value:DrawableEnum): string {\n    var classes = \"toolButton\";\n    if (value === this.drawableType){\n      classes += \" active\";\n    }\n    return classes;\n  }\n\n  showColor(): void {\n    this.showColorPicker = true;\n  }\n\n  onColorChange(event): void {\n    this.colorChange.emit(event.color.hex);\n  }\n\n  onAccept(): void{\n    //setTimeout is hack as onAccept was calling a stale state\n    setTimeout(() => {\n      this.showColorPicker = false;\n    });\n  }\n\n\n  \n  onColorPicked(event): void {\n    this.onColorChange(event);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgAnnoteComponent } from './ng-annote/ng-annote.component';\nimport { ToolbarComponent } from './toolbar/toolbar.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ColorPhotoshopModule } from 'ngx-color/photoshop'\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    NgAnnoteComponent,\n    ToolbarComponent],\n  imports: [\n    FontAwesomeModule,\n    ColorPhotoshopModule,\n    CommonModule\n  ],\n  exports: [NgAnnoteComponent]\n})\nexport class SpproNgAnnoteModule { }\n"]}