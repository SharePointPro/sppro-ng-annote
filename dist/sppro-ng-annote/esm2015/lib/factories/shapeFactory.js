import Konva from 'konva';
const TEXT_AREA_ID = "konva-text-editor";
export default {
    CreateLine(x, y, color) {
        return new Konva.Line({
            stroke: color,
            strokeWidth: 2,
            // globalCompositeOperation:
            //   this.mode === 'brush' ? 'source-over' : 'destination-out',
            points: [x, y],
            draggable: true
        });
    },
    CreateRectange(x, y, color) {
        return new Konva.Rect({
            stroke: color,
            strokeWidth: 2,
            x: x,
            y: y,
            width: 0,
            height: 0,
            draggable: true
        });
    },
    CreateCircle(x, y, color) {
        return new Konva.Circle({
            stroke: color,
            strokeWidth: 2,
            x: x,
            y: y,
            radius: 0,
            draggable: true
        });
    },
    CreateArrow(x, y, color) {
        return new Konva.Arrow({
            stroke: color,
            strokeWidth: 2,
            points: [x, y],
            draggable: true
        });
    },
    CreateText(x, y, color, fontFamily, text) {
        return new Konva.Text({
            stroke: color,
            strokeWidth: .1,
            x: x,
            y: y + 1,
            text: text,
            draggable: true,
            fontFamily: fontFamily,
            fontStyle: 'normal'
        });
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcGVGYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3Bwcm8tbmctYW5ub3RlL3NyYy9saWIvZmFjdG9yaWVzL3NoYXBlRmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFFMUIsTUFBTSxZQUFZLEdBQUcsbUJBQW1CLENBQUM7QUFFekMsZUFBZTtJQUNYLFVBQVUsQ0FBQyxDQUFTLEVBQUUsQ0FBUyxFQUFFLEtBQWE7UUFDMUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFDbEIsTUFBTSxFQUFFLEtBQUs7WUFDYixXQUFXLEVBQUUsQ0FBQztZQUNkLDRCQUE0QjtZQUM1QiwrREFBK0Q7WUFDL0QsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNkLFNBQVMsRUFBRSxJQUFJO1NBQ2xCLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxjQUFjLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxLQUFhO1FBQzlDLE9BQU8sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ2xCLE1BQU0sRUFBRSxLQUFLO1lBQ2IsV0FBVyxFQUFFLENBQUM7WUFDZCxDQUFDLEVBQUUsQ0FBQztZQUNKLENBQUMsRUFBRSxDQUFDO1lBQ0osS0FBSyxFQUFFLENBQUM7WUFDUixNQUFNLEVBQUUsQ0FBQztZQUNULFNBQVMsRUFBRSxJQUFJO1NBQ2xCLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxZQUFZLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxLQUFhO1FBQzVDLE9BQU8sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDO1lBQ3BCLE1BQU0sRUFBRSxLQUFLO1lBQ2IsV0FBVyxFQUFFLENBQUM7WUFDZCxDQUFDLEVBQUUsQ0FBQztZQUNKLENBQUMsRUFBRSxDQUFDO1lBQ0osTUFBTSxFQUFFLENBQUM7WUFDVCxTQUFTLEVBQUUsSUFBSTtTQUNsQixDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QsV0FBVyxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsS0FBYTtRQUMzQyxPQUFPLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQztZQUNuQixNQUFNLEVBQUUsS0FBSztZQUNiLFdBQVcsRUFBRSxDQUFDO1lBQ2QsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNkLFNBQVMsRUFBRSxJQUFJO1NBQ2xCLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxVQUFVLENBQUMsQ0FBUyxFQUFFLENBQVMsRUFBRSxLQUFhLEVBQUUsVUFBa0IsRUFBRSxJQUFZO1FBQzVFLE9BQU8sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ2xCLE1BQU0sRUFBRSxLQUFLO1lBQ2IsV0FBVyxFQUFFLEVBQUU7WUFDZixDQUFDLEVBQUUsQ0FBQztZQUNKLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQztZQUNSLElBQUksRUFBRSxJQUFJO1lBQ1YsU0FBUyxFQUFFLElBQUk7WUFDZixVQUFVLEVBQUUsVUFBVTtZQUN0QixTQUFTLEVBQUUsUUFBUTtTQUN0QixDQUFDLENBQUM7SUFDUCxDQUFDO0NBRUosQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG5vcm1hbGl6ZUdlbkZpbGVTdWZmaXggfSBmcm9tICdAYW5ndWxhci9jb21waWxlci9zcmMvYW90L3V0aWwnO1xyXG5pbXBvcnQgS29udmEgZnJvbSAna29udmEnO1xyXG5cclxuY29uc3QgVEVYVF9BUkVBX0lEID0gXCJrb252YS10ZXh0LWVkaXRvclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgQ3JlYXRlTGluZSh4OiBudW1iZXIsIHk6IG51bWJlciwgY29sb3I6IHN0cmluZyk6IEtvbnZhLkxpbmUge1xyXG4gICAgICAgIHJldHVybiBuZXcgS29udmEuTGluZSh7XHJcbiAgICAgICAgICAgIHN0cm9rZTogY29sb3IsXHJcbiAgICAgICAgICAgIHN0cm9rZVdpZHRoOiAyLFxyXG4gICAgICAgICAgICAvLyBnbG9iYWxDb21wb3NpdGVPcGVyYXRpb246XHJcbiAgICAgICAgICAgIC8vICAgdGhpcy5tb2RlID09PSAnYnJ1c2gnID8gJ3NvdXJjZS1vdmVyJyA6ICdkZXN0aW5hdGlvbi1vdXQnLFxyXG4gICAgICAgICAgICBwb2ludHM6IFt4LCB5XSxcclxuICAgICAgICAgICAgZHJhZ2dhYmxlOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgQ3JlYXRlUmVjdGFuZ2UoeDogbnVtYmVyLCB5OiBudW1iZXIsIGNvbG9yOiBzdHJpbmcpOiBLb252YS5SZWN0IHtcclxuICAgICAgICByZXR1cm4gbmV3IEtvbnZhLlJlY3Qoe1xyXG4gICAgICAgICAgICBzdHJva2U6IGNvbG9yLFxyXG4gICAgICAgICAgICBzdHJva2VXaWR0aDogMixcclxuICAgICAgICAgICAgeDogeCxcclxuICAgICAgICAgICAgeTogeSxcclxuICAgICAgICAgICAgd2lkdGg6IDAsXHJcbiAgICAgICAgICAgIGhlaWdodDogMCxcclxuICAgICAgICAgICAgZHJhZ2dhYmxlOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgQ3JlYXRlQ2lyY2xlKHg6IG51bWJlciwgeTogbnVtYmVyLCBjb2xvcjogc3RyaW5nKTogS29udmEuQ2lyY2xlIHtcclxuICAgICAgICByZXR1cm4gbmV3IEtvbnZhLkNpcmNsZSh7XHJcbiAgICAgICAgICAgIHN0cm9rZTogY29sb3IsXHJcbiAgICAgICAgICAgIHN0cm9rZVdpZHRoOiAyLFxyXG4gICAgICAgICAgICB4OiB4LFxyXG4gICAgICAgICAgICB5OiB5LFxyXG4gICAgICAgICAgICByYWRpdXM6IDAsXHJcbiAgICAgICAgICAgIGRyYWdnYWJsZTogdHJ1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIENyZWF0ZUFycm93KHg6IG51bWJlciwgeTogbnVtYmVyLCBjb2xvcjogc3RyaW5nKTogS29udmEuQXJyb3cge1xyXG4gICAgICAgIHJldHVybiBuZXcgS29udmEuQXJyb3coe1xyXG4gICAgICAgICAgICBzdHJva2U6IGNvbG9yLFxyXG4gICAgICAgICAgICBzdHJva2VXaWR0aDogMixcclxuICAgICAgICAgICAgcG9pbnRzOiBbeCwgeV0sXHJcbiAgICAgICAgICAgIGRyYWdnYWJsZTogdHJ1ZVxyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIENyZWF0ZVRleHQoeDogbnVtYmVyLCB5OiBudW1iZXIsIGNvbG9yOiBzdHJpbmcsIGZvbnRGYW1pbHk6IHN0cmluZywgdGV4dDogc3RyaW5nKTogS29udmEuVGV4dCB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBLb252YS5UZXh0KHtcclxuICAgICAgICAgICAgc3Ryb2tlOiBjb2xvcixcclxuICAgICAgICAgICAgc3Ryb2tlV2lkdGg6IC4xLFxyXG4gICAgICAgICAgICB4OiB4LFxyXG4gICAgICAgICAgICB5OiB5ICsgMSxcclxuICAgICAgICAgICAgdGV4dDogdGV4dCxcclxuICAgICAgICAgICAgZHJhZ2dhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBmb250RmFtaWx5OiBmb250RmFtaWx5LFxyXG4gICAgICAgICAgICBmb250U3R5bGU6ICdub3JtYWwnXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==